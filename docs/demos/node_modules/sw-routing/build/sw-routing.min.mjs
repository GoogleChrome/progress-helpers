/*
 Copyright 2016 Google Inc. All Rights Reserved.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
function atLeastOne(a){const b=Object.keys(a);if(!b.some(d=>a[d]!==void 0))throw Error('Please set at least one of the following parameters: '+b.map(d=>`'${d}'`).join(', '))}function hasMethod(a,b){const d=Object.keys(a).pop(),e=typeof a[d][b];if('function'!=e)throw Error(`The '${d}' parameter must be an object that exposes `+`a '${b}' method.`)}function isInstance(a,b){const d=Object.keys(a).pop();if(!(a[d]instanceof b))throw Error(`The '${d}' parameter must be an instance of `+`'${b.name}'`)}function isOneOf(a,b){const d=Object.keys(a).pop();if(!b.includes(a[d]))throw Error(`The '${d}' parameter must be set to one of the `+`following: ${b}`)}function isType(a,b){const d=Object.keys(a).pop(),e=typeof a[d];if(e!==b)throw Error(`The '${d}' parameter has the wrong type. `+`(Expected: ${b}, actual: ${e})`)}function isSWEnv(){return'ServiceWorkerGlobalScope'in self&&self instanceof ServiceWorkerGlobalScope}function isValue(a,b){const d=Object.keys(a).pop(),e=a[d];if(e!==b)throw Error(`The '${d}' parameter has the wrong value. `+`(Expected: ${b}, actual: ${e})`)}var assert={atLeastOne,hasMethod,isInstance,isOneOf,isType,isSWEnv,isValue};const defaultMethod='GET',validMethods=['DELETE','GET','HEAD','POST','PUT'];class Route{constructor({match:a,handler:b,method:d}={}){assert.isType({match:a},'function'),assert.hasMethod({handler:b},'handle'),this.match=a,this.handler=b,d?(assert.isOneOf({method:d},validMethods),this.method=d):this.method=defaultMethod}}var index$1=Array.isArray||function(a){return'[object Array]'==Object.prototype.toString.call(a)},isarray=index$1,index=pathToRegexp,parse_1=parse,compile_1=compile,tokensToFunction_1=tokensToFunction,tokensToRegExp_1=tokensToRegExp,PATH_REGEXP=new RegExp(['(\\\\.)','([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'].join('|'),'g');function parse(a,b){for(var k,d=[],e=0,f=0,g='',h=b&&b.delimiter||'/';null!=(k=PATH_REGEXP.exec(a));){var l=k[0],n=k[1],o=k.index;if(g+=a.slice(f,o),f=o+l.length,n){g+=n[1];continue}var q=a[f],r=k[2],s=k[3],t=k[4],u=k[5],v=k[6],w=k[7];g&&(d.push(g),g='');var x=k[2]||h,y=t||u;d.push({name:s||e++,prefix:r||'',delimiter:x,optional:'?'===v||'*'===v,repeat:'+'===v||'*'===v,partial:null!=r&&null!=q&&q!==r,asterisk:!!w,pattern:y?escapeGroup(y):w?'.*':'[^'+escapeString(x)+']+?'})}return f<a.length&&(g+=a.substr(f)),g&&d.push(g),d}function compile(a,b){return tokensToFunction(parse(a,b))}function encodeURIComponentPretty(a){return encodeURI(a).replace(/[\/?#]/g,function(b){return'%'+b.charCodeAt(0).toString(16).toUpperCase()})}function encodeAsterisk(a){return encodeURI(a).replace(/[?#]/g,function(b){return'%'+b.charCodeAt(0).toString(16).toUpperCase()})}function tokensToFunction(a){var b=Array(a.length);for(var d=0;d<a.length;d++)'object'==typeof a[d]&&(b[d]=new RegExp('^(?:'+a[d].pattern+')$'));return function(e,f){var g='',h=e||{},k=(f||{}).pretty?encodeURIComponentPretty:encodeURIComponent;for(var l=0;l<a.length;l++){var n=a[l];if('string'==typeof n){g+=n;continue}var q,o=h[n.name];if(null==o)if(n.optional){n.partial&&(g+=n.prefix);continue}else throw new TypeError('Expected "'+n.name+'" to be defined');if(isarray(o)){if(!n.repeat)throw new TypeError('Expected "'+n.name+'" to not repeat, but received `'+JSON.stringify(o)+'`');if(0===o.length)if(n.optional)continue;else throw new TypeError('Expected "'+n.name+'" to not be empty');for(var r=0;r<o.length;r++){if(q=k(o[r]),!b[l].test(q))throw new TypeError('Expected all "'+n.name+'" to match "'+n.pattern+'", but received `'+JSON.stringify(q)+'`');g+=(0===r?n.prefix:n.delimiter)+q}continue}if(q=n.asterisk?encodeAsterisk(o):k(o),!b[l].test(q))throw new TypeError('Expected "'+n.name+'" to match "'+n.pattern+'", but received "'+q+'"');g+=n.prefix+q}return g}}function escapeString(a){return a.replace(/([.+*?=^!:${}()[\]|\/\\])/g,'\\$1')}function escapeGroup(a){return a.replace(/([=!:$\/()])/g,'\\$1')}function attachKeys(a,b){return a.keys=b,a}function flags(a){return a.sensitive?'':'i'}function regexpToRegexp(a,b){var d=a.source.match(/\((?!\?)/g);if(d)for(var e=0;e<d.length;e++)b.push({name:e,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return attachKeys(a,b)}function arrayToRegexp(a,b,d){var e=[];for(var f=0;f<a.length;f++)e.push(pathToRegexp(a[f],b,d).source);var g=new RegExp('(?:'+e.join('|')+')',flags(d));return attachKeys(g,b)}function stringToRegexp(a,b,d){return tokensToRegExp(parse(a,d),b,d)}function tokensToRegExp(a,b,d){isarray(b)||(d=b||d,b=[]),d=d||{};var e=d.strict,f=!1!==d.end,g='';for(var h=0;h<a.length;h++){var k=a[h];if('string'==typeof k)g+=escapeString(k);else{var l=escapeString(k.prefix),n='(?:'+k.pattern+')';b.push(k),k.repeat&&(n+='(?:'+l+n+')*'),n=k.optional?k.partial?l+'('+n+')?':'(?:'+l+'('+n+'))?':l+'('+n+')',g+=n}}var o=escapeString(d.delimiter||'/'),q=g.slice(-o.length)===o;return e||(g=(q?g.slice(0,-o.length):g)+'(?:'+o+'(?=$))?'),g+=f?'$':e&&q?'':'(?='+o+'|$)',attachKeys(new RegExp('^'+g,flags(d)),b)}function pathToRegexp(a,b,d){return isarray(b)||(d=b||d,b=[]),d=d||{},a instanceof RegExp?regexpToRegexp(a,b):isarray(a)?arrayToRegexp(a,b,d):stringToRegexp(a,b,d)}index.parse=parse_1,index.compile=compile_1,index.tokensToFunction=tokensToFunction_1,index.tokensToRegExp=tokensToRegExp_1;class ExpressRoute extends Route{constructor({path:a,handler:b,method:d}){assert.isType({path:a},'string'),assert.hasMethod({handler:b},'handle');const e=index(a);super({match:({url:f})=>f.pathname.match(e),handler:b,method:d})}}class RegExpRoute extends Route{constructor({regExp:a,handler:b,method:d}){assert.isInstance({regExp:a},RegExp),assert.hasMethod({handler:b},'handle'),super({match:({url:e})=>e.href.match(a),handler:b,method:d})}}class Router{setDefaultHandler({handler:a}={}){assert.hasMethod({handler:a},'handle'),this.defaultHandler=a}setCatchHandler({handler:a}={}){assert.hasMethod({handler:a},'handle'),this.catchHandler=a}registerRoutes({routes:a}={}){assert.isInstance({routes:a},Array),self.addEventListener('fetch',b=>{const d=new URL(b.request.url);if(d.protocol.startsWith('http')){let e;for(let f of a||[])if(f.method===b.request.method){const g=f.match({url:d,event:b});if(g||0===g||''===g){e=f.handler.handle({url:d,event:b,params:g});break}}!e&&this.defaultHandler&&(e=this.defaultHandler.handle({url:d,event:b})),e&&this.catchHandler&&(e=e.catch(f=>{return this.catchHandler.handle({url:d,event:b,error:f})})),e&&b.respondWith(e)}})}registerRoute({route:a}={}){assert.isInstance({route:a},Route),this.registerRoutes({routes:[a]})}}export{ExpressRoute,RegExpRoute,Route,Router};