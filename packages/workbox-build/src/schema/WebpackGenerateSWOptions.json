{"additionalProperties":false,"type":"object","properties":{"chunks":{"type":"array","items":{"type":"string"}},"exclude":{"type":"array","items":{}},"excludeChunks":{"type":"array","items":{"type":"string"}},"include":{"type":"array","items":{}},"mode":{"default":"production","type":["null","string"]},"babelPresetEnvTargets":{"default":["chrome >= 56"],"type":"array","items":{"type":"string"}},"cacheId":{"type":["null","string"]},"cleanupOutdatedCaches":{"default":false,"type":"boolean"},"clientsClaim":{"default":false,"type":"boolean"},"directoryIndex":{"type":["null","string"]},"disableDevLogs":{"default":false,"type":"boolean"},"ignoreURLParametersMatching":{"type":"array","items":{"$ref":"#/definitions/RegExp"}},"importScripts":{"type":"array","items":{"type":"string"}},"inlineWorkboxRuntime":{"default":false,"type":"boolean"},"navigateFallback":{"default":null,"type":["null","string"]},"navigateFallbackAllowlist":{"type":"array","items":{"$ref":"#/definitions/RegExp"}},"navigateFallbackDenylist":{"type":"array","items":{"$ref":"#/definitions/RegExp"}},"navigationPreload":{"default":false,"type":"boolean"},"offlineGoogleAnalytics":{"default":false,"anyOf":[{"$ref":"#/definitions/GoogleAnalyticsInitializeOptions"},{"type":"boolean"}]},"runtimeCaching":{"type":"array","items":{"$ref":"#/definitions/RuntimeCaching"}},"skipWaiting":{"default":false,"type":"boolean"},"sourcemap":{"default":true,"type":"boolean"},"additionalManifestEntries":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/ManifestEntry"},{"type":"string"}]}},"dontCacheBustURLsMatching":{"$ref":"#/definitions/RegExp"},"manifestTransforms":{"type":"array","items":{"typeof":"function"}},"maximumFileSizeToCacheInBytes":{"default":2097152,"type":"number"},"modifyURLPrefix":{"typeof":"function"},"importScriptsViaChunks":{"type":"array","items":{"type":"string"}},"swDest":{"default":"service-worker.js","type":"string"}},"definitions":{"RegExp":{"type":"object","properties":{"source":{"type":"string"},"global":{"type":"boolean"},"ignoreCase":{"type":"boolean"},"multiline":{"type":"boolean"},"lastIndex":{"type":"number"},"flags":{"type":"string"},"sticky":{"type":"boolean"},"unicode":{"type":"boolean"},"dotAll":{"type":"boolean"}},"additionalProperties":false,"required":["dotAll","flags","global","ignoreCase","lastIndex","multiline","source","sticky","unicode"]},"GoogleAnalyticsInitializeOptions":{"type":"object","properties":{"cacheName":{"type":"string"},"parameterOverrides":{"typeof":"function"},"hitFilter":{"typeof":"function"}},"additionalProperties":false},"RuntimeCaching":{"type":"object","properties":{"handler":{"anyOf":[{"$ref":"#/definitions/RouteHandlerCallback"},{"$ref":"#/definitions/RouteHandlerObject"},{"enum":["CacheFirst","CacheOnly","NetworkFirst","NetworkOnly","StaleWhileRevalidate"],"type":"string"}]},"method":{"enum":["DELETE","GET","HEAD","PATCH","POST","PUT"],"type":"string"},"options":{"typeof":"function"},"urlPattern":{"anyOf":[{"$ref":"#/definitions/RegExp"},{"$ref":"#/definitions/RouteMatchCallback"},{"type":"string"}]}},"additionalProperties":false,"required":["handler","urlPattern"]},"RouteHandlerCallback":{"description":"The \"handler\" callback is invoked whenever a `Router` matches a URL/Request\nto a `Route` via its `RouteMatchCallback`. This handler callback should\nreturn a `Promise` that resolves with a `Response`.\n\nIf a non-empty array or object is returned by the `RouteMatchCallback` it\nwill be passed in as this handler's `options.params` argument.","type":"object","additionalProperties":false},"RouteHandlerObject":{"description":"An object with a `handle` method of type `RouteHandlerCallback`.\n\nA `Route` object can be created with either an `RouteHandlerCallback`\nfunction or this `RouteHandler` object. The benefit of the `RouteHandler`\nis it can be extended (as is done by the `workbox-strategies` package).","type":"object","properties":{"handle":{"$ref":"#/definitions/RouteHandlerCallback"}},"additionalProperties":false,"required":["handle"]},"RouteMatchCallback":{"description":"The \"match\" callback is used to determine if a `Route` should apply for a\nparticular URL and request. When matching occurs in response to a fetch\nevent from the client, the `event` object is also supplied. However, since\nthe match callback can be invoked outside of a fetch event, matching logic\nshould not assume the `event` object will always be available.\nIf the match callback returns a truthy value, the matching route's\n`RouteHandlerCallback` will be invoked immediately. If the value returned\nis a non-empty array or object, that value will be set on the handler's\n`options.params` argument.","type":"object","additionalProperties":false},"ManifestEntry":{"type":"object","properties":{"integrity":{"type":"string"},"revision":{"type":["null","string"]},"url":{"type":"string"}},"additionalProperties":false,"required":["revision","url"]}},"$schema":"http://json-schema.org/draft-07/schema#"}
