{"allOf":[{"$ref":"#/definitions/GlobPartial"},{"$ref":"#/definitions/GeneratePartial"},{"$ref":"#/definitions/BasePartial"},{"$ref":"#/definitions/SWDestPartial"}],"definitions":{"GlobPartial":{"type":"object","properties":{"globDirectory":{"type":["null","string"]},"globFollow":{"type":"boolean"},"globIgnores":{"type":"array","items":{"type":"string"}},"globPatterns":{"type":"array","items":{"type":"string"}},"globStrict":{"type":"boolean"},"templatedURLs":{"type":"object","additionalProperties":{"anyOf":[{"type":"array","items":{"type":"string"}},{"type":"string"}]}}}},"GeneratePartial":{"type":"object","properties":{"babelPresetEnvTargets":{"type":"array","items":{"type":"string"}},"cacheId":{"type":["null","string"]},"cleanupOutdatedCaches":{"type":"boolean"},"clientsClaim":{"type":"boolean"},"directoryIndex":{"type":["null","string"]},"disableDevLogs":{"type":"boolean"},"ignoreURLParametersMatching":{"type":"array","items":{"$ref":"#/definitions/RegExp"}},"importScripts":{"type":"array","items":{"type":"string"}},"inlineWorkboxRuntime":{"type":"boolean"},"mode":{"type":["null","string"]},"navigateFallback":{"type":["null","string"]},"navigateFallbackAllowlist":{"type":"array","items":{"$ref":"#/definitions/RegExp"}},"navigateFallbackDenylist":{"type":"array","items":{"$ref":"#/definitions/RegExp"}},"navigationPreload":{"type":"boolean"},"offlineGoogleAnalytics":{"anyOf":[{"$ref":"#/definitions/GoogleAnalyticsInitializeOptions"},{"type":"boolean"}]},"runtimeCaching":{"type":"array","items":{"$ref":"#/definitions/RuntimeCaching"}},"skipWaiting":{"type":"boolean"},"sourcemap":{"type":"boolean"}}},"RegExp":{"type":"object","properties":{"source":{"type":"string"},"global":{"type":"boolean"},"ignoreCase":{"type":"boolean"},"multiline":{"type":"boolean"},"lastIndex":{"type":"number"},"flags":{"type":"string"},"sticky":{"type":"boolean"},"unicode":{"type":"boolean"},"dotAll":{"type":"boolean"}}},"GoogleAnalyticsInitializeOptions":{"type":"object","properties":{"cacheName":{"type":"string"},"parameterOverrides":{"type":"object","additionalProperties":{"type":"string"}},"hitFilter":{"type":"object"}}},"RuntimeCaching":{"type":"object","properties":{"handler":{"anyOf":[{"$ref":"#/definitions/RouteHandlerCallback"},{"$ref":"#/definitions/RouteHandlerObject"},{"enum":["CacheFirst","CacheOnly","NetworkFirst","NetworkOnly","StaleWhileRevalidate"],"type":"string"}]},"method":{"enum":["DELETE","GET","HEAD","PATCH","POST","PUT"],"type":"string"},"options":{"type":"object","properties":{"backgroundSync":{"type":"object","properties":{"name":{"type":"string"},"options":{"$ref":"#/definitions/QueueOptions"}}},"broadcastUpdate":{"type":"object","properties":{"channelName":{"type":"string"},"options":{"$ref":"#/definitions/BroadcastCacheUpdateOptions"}}},"cacheableResponse":{"$ref":"#/definitions/CacheableResponseOptions"},"cacheName":{"type":["null","string"]},"expiration":{"$ref":"#/definitions/ExpirationPluginOptions"},"networkTimeoutSeconds":{"type":"number"},"plugins":{"type":"array","items":{"$ref":"#/definitions/WorkboxPlugin"}},"precacheFallback":{"type":"object","properties":{"fallbackURL":{"type":"string"}}},"fetchOptions":{"$ref":"#/definitions/RequestInit"},"matchOptions":{"$ref":"#/definitions/CacheQueryOptions"}}},"urlPattern":{"anyOf":[{"$ref":"#/definitions/RegExp"},{"$ref":"#/definitions/RouteMatchCallback"},{"type":"string"}]}}},"RouteHandlerCallback":{"description":"The \"handler\" callback is invoked whenever a `Router` matches a URL/Request\nto a `Route` via its `RouteMatchCallback`. This handler callback should\nreturn a `Promise` that resolves with a `Response`.\n\nIf a non-empty array or object is returned by the `RouteMatchCallback` it\nwill be passed in as this handler's `options.params` argument.","type":"object"},"RouteHandlerObject":{"description":"An object with a `handle` method of type `RouteHandlerCallback`.\n\nA `Route` object can be created with either an `RouteHandlerCallback`\nfunction or this `RouteHandler` object. The benefit of the `RouteHandler`\nis it can be extended (as is done by the `workbox-strategies` package).","type":"object","properties":{"handle":{"$ref":"#/definitions/RouteHandlerCallback"}}},"QueueOptions":{"type":"object","properties":{"onSync":{"$ref":"#/definitions/OnSyncCallback"},"maxRetentionTime":{"type":"number"}}},"OnSyncCallback":{"type":"object"},"BroadcastCacheUpdateOptions":{"type":"object","properties":{"headersToCheck":{"type":"array","items":{"type":"string"}},"generatePayload":{"type":"object"}}},"CacheableResponseOptions":{"type":"object","properties":{"statuses":{"type":"array","items":{"type":"number"}},"headers":{"type":"object","additionalProperties":{"type":"string"}}}},"ExpirationPluginOptions":{"type":"object","properties":{"maxEntries":{"type":"number"},"maxAgeSeconds":{"type":"number"},"matchOptions":{"$ref":"#/definitions/CacheQueryOptions"},"purgeOnQuotaError":{"type":"boolean"}}},"CacheQueryOptions":{"type":"object","properties":{"ignoreMethod":{"type":"boolean"},"ignoreSearch":{"type":"boolean"},"ignoreVary":{"type":"boolean"}}},"WorkboxPlugin":{"description":"An object with optional lifecycle callback properties for the fetch and\ncache operations.","type":"object","properties":{"cacheDidUpdate":{"$ref":"#/definitions/CacheDidUpdateCallback"},"cachedResponseWillBeUsed":{"$ref":"#/definitions/CachedResponseWillBeUsedCallback"},"cacheKeyWillBeUsed":{"$ref":"#/definitions/CacheKeyWillBeUsedCallback"},"cacheWillUpdate":{"$ref":"#/definitions/CacheWillUpdateCallback"},"fetchDidFail":{"$ref":"#/definitions/FetchDidFailCallback"},"fetchDidSucceed":{"$ref":"#/definitions/FetchDidSucceedCallback"},"handlerDidComplete":{"$ref":"#/definitions/HandlerDidCompleteCallback"},"handlerDidError":{"$ref":"#/definitions/HandlerDidErrorCallback"},"handlerDidRespond":{"$ref":"#/definitions/HandlerDidRespondCallback"},"handlerWillRespond":{"$ref":"#/definitions/HandlerWillRespondCallback"},"handlerWillStart":{"$ref":"#/definitions/HandlerWillStartCallback"},"requestWillFetch":{"$ref":"#/definitions/RequestWillFetchCallback"}}},"CacheDidUpdateCallback":{"type":"object"},"CachedResponseWillBeUsedCallback":{"type":"object"},"CacheKeyWillBeUsedCallback":{"type":"object"},"CacheWillUpdateCallback":{"type":"object"},"FetchDidFailCallback":{"type":"object"},"FetchDidSucceedCallback":{"type":"object"},"HandlerDidCompleteCallback":{"type":"object"},"HandlerDidErrorCallback":{"type":"object"},"HandlerDidRespondCallback":{"type":"object"},"HandlerWillRespondCallback":{"type":"object"},"HandlerWillStartCallback":{"type":"object"},"RequestWillFetchCallback":{"type":"object"},"RequestInit":{"type":"object","properties":{"body":{"anyOf":[{"$ref":"#/definitions/ArrayBuffer"},{"$ref":"#/definitions/ArrayBufferView"},{"$ref":"#/definitions/Blob"},{"$ref":"#/definitions/FormData"},{"$ref":"#/definitions/URLSearchParams"},{"$ref":"#/definitions/ReadableStream<Uint8Array>"},{"type":["null","string"]}]},"cache":{"enum":["default","force-cache","no-cache","no-store","only-if-cached","reload"],"type":"string"},"credentials":{"enum":["include","omit","same-origin"],"type":"string"},"headers":{"anyOf":[{"$ref":"#/definitions/Headers"},{"type":"array","items":{"type":"array","items":{"type":"string"}}},{"$ref":"#/definitions/Record<string,string>"}]},"integrity":{"type":"string"},"keepalive":{"type":"boolean"},"method":{"type":"string"},"mode":{"enum":["cors","navigate","no-cors","same-origin"],"type":"string"},"redirect":{"enum":["error","follow","manual"],"type":"string"},"referrer":{"type":"string"},"referrerPolicy":{"enum":["","no-referrer","no-referrer-when-downgrade","origin","origin-when-cross-origin","same-origin","strict-origin","strict-origin-when-cross-origin","unsafe-url"],"type":"string"},"signal":{"anyOf":[{"$ref":"#/definitions/AbortSignal"},{"type":"null"}]},"window":{}}},"ArrayBuffer":{"type":"object","properties":{"byteLength":{"type":"number"},"__@toStringTag":{"type":"string"}}},"ArrayBufferView":{"type":"object","properties":{"buffer":{"anyOf":[{"$ref":"#/definitions/ArrayBuffer"},{"$ref":"#/definitions/SharedArrayBuffer"}]},"byteLength":{"type":"number"},"byteOffset":{"type":"number"}}},"SharedArrayBuffer":{"type":"object","properties":{"byteLength":{"type":"number"},"__@species":{"$ref":"#/definitions/SharedArrayBuffer"},"__@toStringTag":{"type":"string","enum":["SharedArrayBuffer"]}}},"Blob":{"type":"object","properties":{"size":{"type":"number"},"type":{"type":"string"}}},"FormData":{"type":"object"},"URLSearchParams":{"type":"object"},"ReadableStream<Uint8Array>":{"type":"object","properties":{"locked":{"type":"boolean"}}},"Headers":{"type":"object"},"Record<string,string>":{"type":"object"},"AbortSignal":{"type":"object","properties":{"aborted":{"type":"boolean"},"onabort":{"type":["null","object"]}}},"RouteMatchCallback":{"description":"The \"match\" callback is used to determine if a `Route` should apply for a\nparticular URL and request. When matching occurs in response to a fetch\nevent from the client, the `event` object is also supplied. However, since\nthe match callback can be invoked outside of a fetch event, matching logic\nshould not assume the `event` object will always be available.\nIf the match callback returns a truthy value, the matching route's\n`RouteHandlerCallback` will be invoked immediately. If the value returned\nis a non-empty array or object, that value will be set on the handler's\n`options.params` argument.","type":"object"},"BasePartial":{"type":"object","properties":{"additionalManifestEntries":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/ManifestEntry"},{"type":"string"}]}},"dontCacheBustURLsMatching":{"$ref":"#/definitions/RegExp"},"manifestTransforms":{"type":"array","items":{"type":"object"}},"maximumFileSizeToCacheInBytes":{"type":"number"},"modifyURLPrefix":{"type":"object","additionalProperties":{"type":"string"}}}},"ManifestEntry":{"type":"object","properties":{"integrity":{"type":"string"},"revision":{"type":["null","string"]},"url":{"type":"string"}}},"SWDestPartial":{"type":"object","properties":{"swDest":{"type":"string"}}}},"$schema":"http://json-schema.org/draft-07/schema#"}
