name: Test Suite

on: [pull_request]

jobs:
  # Node_Tests_Windows:
  #   runs-on: windows-latest
    
  #   steps:
  #   - uses: actions/checkout@v2
      
  #   - uses: actions/cache@v1
  #     with:
  #       path: ~/.npm
  #       key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #       restore-keys: |
  #         ${{ runner.os }}-node-
          
  #   - uses: actions/setup-node@v1
  #     with:
  #       node-version: 13.x

  #   - run: npm ci
  #   - run: npx gulp test

  Full_Suite_Mac:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v2

    - run: node infra/should-run-tests.js

    - uses: actions/cache@v1
      if: env.SHOULD_RUN_TESTS == 'true'
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
    - uses: actions/cache@v1
      if: env.SHOULD_RUN_TESTS == 'true'
      with:
        path: ~/.selenium-assistant
        key: ${{ runner.os }}
          
    - uses: actions/setup-node@v1
      if: env.SHOULD_RUN_TESTS == 'true'
      with:
        node-version: 8

    - run: |
        defaults write com.apple.Safari IncludeDevelopMenu YES
        defaults write com.apple.Safari AllowRemoteAutomation 1
        sudo safaridriver --enable
        safaridriver -p 0 &
      if: env.SHOULD_RUN_TESTS == 'true'
    - run: npm ci
      if: env.SHOULD_RUN_TESTS == 'true'
    - run: npx gulp test
      if: env.SHOULD_RUN_TESTS == 'true'
